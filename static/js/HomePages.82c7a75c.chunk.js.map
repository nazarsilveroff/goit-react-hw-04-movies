{"version":3,"sources":["pages/homePage/HomePage.js","pages/moviesPage/MoviesPage.js","routes/detailRoutes.js","pages/movieDetailsPage/MovieDetailsPage.js"],"names":["HomePage","state","movies","a","axios","get","data","this","setState","results","map","movie","to","id","title","Component","URL","API","MoviesPage","input","searchMove","handleChange","e","target","value","handleSumbmit","preventDefault","qweryParams","URLSearchParams","set","props","history","push","search","toString","retrieveQuery","location","queryString","length","prevProps","onSubmit","type","onChange","detailRoutes","name","path","exact","component","lazy","MovieDetailsPage","onHandleClick","goBack","movieId","match","params","onClick","release_date","width","src","poster_path","alt","Math","floor","popularity","overview","genres","genre","item","url","fallback"],"mappings":"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","file":"static/js/HomePages.82c7a75c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst URL = `https://api.themoviedb.org`;\r\nconst API = `3c3f31939cc89ca41e272b4d5922ad13`;\r\nclass HomePage extends Component {\r\n  state = { movies: [] };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${URL}/3/trending/movie/day?api_key=${API}`\r\n      );\r\n      this.setState({ movies: data.results });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Trending today</h1>\r\n        <ul>\r\n          {movies.map((movie) => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst URL = `https://api.themoviedb.org`;\r\nconst API = `3c3f31939cc89ca41e272b4d5922ad13`;\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    input: \"\",\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const queryString = this.retrieveQuery() || \"\";\r\n    if (queryString.length !== 0) {\r\n      this.setState({ input: queryString }, this.searchMove);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n      this.searchMove();\r\n    }\r\n  }\r\n\r\n  searchMove = async () => {\r\n    const { input } = this.state;\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${URL}/3/search/movie/?query=${input}&api_key=${API}`\r\n      );\r\n      this.setState({ movies: data.results });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ input: e.target.value });\r\n  };\r\n  handleSumbmit = (e) => {\r\n    e.preventDefault();\r\n    const qweryParams = new URLSearchParams();\r\n    qweryParams.set(\"query\", this.state.input);\r\n    this.props.history.push({ search: qweryParams.toString() });\r\n  };\r\n\r\n  retrieveQuery = () => {\r\n    const qweryParams = new URLSearchParams(this.props.location.search);\r\n    return qweryParams.get(\"query\");\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSumbmit}>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button type=\"submit\">FIND</button>\r\n          </label>\r\n        </form>\r\n        <ul>\r\n          {movies.map((movie) => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import { lazy } from \"react\";\r\n// import Cast from \"../Components/ditails/Cast\";\r\n// import Reviews from \"../Components/ditails/Reviews\";\r\n\r\nconst detailRoutes = [\r\n  {\r\n    name: \"Cast\",\r\n    path: \"/cast\",\r\n    exact: true,\r\n    component: lazy(\r\n      () => import(\"../Components/ditails/Cast\")\r\n      /*webpackChunkName:'Cast'*/\r\n    ),\r\n  },\r\n  {\r\n    name: \"Reviews\",\r\n    path: \"/reviews\",\r\n    exact: true,\r\n    component: lazy(\r\n      () => import(\"../Components/ditails/Reviews\")\r\n      /*webpackChunkName:'Reviews'*/\r\n    ),\r\n  },\r\n];\r\nexport default detailRoutes;\r\n","import axios from \"axios\";\r\nimport React, { Component, Suspense } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport detailRoutes from \"../../routes/detailRoutes\";\r\n\r\nconst URL = `https://api.themoviedb.org`;\r\nconst API = `3c3f31939cc89ca41e272b4d5922ad13`;\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = { movie: null };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${URL}/3/movie/${movieId}?api_key=${API}`\r\n      );\r\n      this.setState({ movie: data });\r\n    } catch (error) {}\r\n  }\r\n\r\n  onHandleClick = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    const { match } = this.props;\r\n    return (\r\n      movie && (\r\n        <>\r\n          <button type=\"button\" onClick={this.onHandleClick}>\r\n            BACK\r\n          </button>\r\n          <h1>\r\n            {movie.title} {movie.release_date}\r\n          </h1>\r\n          <img\r\n            width=\"300\"\r\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <p>User score: {Math.floor(movie.popularity)}%</p>\r\n          <h2>Overview</h2>\r\n          <p>{movie.overview}</p>\r\n          <strong>Genres</strong>\r\n          <ul>\r\n            {movie.genres?.map((genre) => (\r\n              <li key={genre.id}>{genre.name}</li>\r\n            ))}\r\n          </ul>\r\n          <h2>Additional information</h2>\r\n          <ul>\r\n            {detailRoutes.map((item) => (\r\n              <li key={item.path}>\r\n                <Link to={match.url + item.path}>{item.name}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              {detailRoutes.map((item) => (\r\n                <Route\r\n                  path={match.path + item.path}\r\n                  key={item.path}\r\n                  component={item.component}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Suspense>\r\n        </>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}